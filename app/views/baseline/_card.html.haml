-# frozen_string_literal: true
-# locals: (title: nil, image: nil, icon: nil, header: nil, css_class: nil, body_css_class: nil, equal_height: false, url: nil, footer: nil, footer_css_class: nil, title_tag: :h5, above_title: nil, after_body: nil, image_cover: false, data: {}, style: nil)

- css_class = class_names(:card, css_class, "h-100": equal_height)

- content = capture_haml do
  - image_css_class = class_names("card-img-top", "cover": image_cover)
  - case image
  - when Array
    - if image.first.attached?
      = attachment_image_tag *image, class: image_css_class
  - when String
    = image_tag image, class: image_css_class
  - when ActiveStorage::Attached::One
    - if image.attached?
      = image_tag image, class: image_css_class
  - when NilClass
  - else
    - raise "Unexpected image: #{image.class}"

  - if header
    %h5.card-header
      = header.html_safe

  .card-body{ class: body_css_class }
    - case icon
    - when /\.svg\z/
      = inline_svg icon, class: "card-icon"
    - when /\.(jpg|png)\z/
      = image_tag icon, class: "card-icon"
    - when /.+/
      %span.card-icon
        = icon

    = above_title

    - if title
      = tag.public_send(title_tag, class: "card-title") do
        = title

    = yield

  = after_body

  - if footer
    .card-footer{ class: footer_css_class }
      = footer.html_safe

- if url
  = link_to content, url, class: [*css_class, "text-body"], data:, style:
- else
  %div{ class: css_class, data:, style: }
    = content
